// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for BuildResponseChannel.
const (
	BuildResponseChannelALPHA       BuildResponseChannel = "ALPHA"
	BuildResponseChannelBETA        BuildResponseChannel = "BETA"
	BuildResponseChannelRECOMMENDED BuildResponseChannel = "RECOMMENDED"
	BuildResponseChannelSTABLE      BuildResponseChannel = "STABLE"
)

// Defines values for SupportStatus.
const (
	DEPRECATED  SupportStatus = "DEPRECATED"
	SUPPORTED   SupportStatus = "SUPPORTED"
	UNSUPPORTED SupportStatus = "UNSUPPORTED"
)

// Defines values for GetBuildsParamsChannel.
const (
	GetBuildsParamsChannelALPHA       GetBuildsParamsChannel = "ALPHA"
	GetBuildsParamsChannelBETA        GetBuildsParamsChannel = "BETA"
	GetBuildsParamsChannelRECOMMENDED GetBuildsParamsChannel = "RECOMMENDED"
	GetBuildsParamsChannelSTABLE      GetBuildsParamsChannel = "STABLE"
)

// BuildResponse defines model for BuildResponse.
type BuildResponse struct {
	Channel   *BuildResponseChannel `json:"channel,omitempty"`
	Commits   *[]Commit             `json:"commits,omitempty"`
	Downloads *map[string]Download  `json:"downloads,omitempty"`
	Id        *int32                `json:"id,omitempty"`
	Time      *time.Time            `json:"time,omitempty"`
}

// BuildResponseChannel defines model for BuildResponse.Channel.
type BuildResponseChannel string

// Checksums defines model for Checksums.
type Checksums struct {
	Sha256 *string `json:"sha256,omitempty"`
}

// Commit defines model for Commit.
type Commit struct {
	Message *string    `json:"message,omitempty"`
	Sha     *string    `json:"sha,omitempty"`
	Time    *time.Time `json:"time,omitempty"`
}

// Download defines model for Download.
type Download struct {
	Checksums *Checksums `json:"checksums,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Size      *int32     `json:"size,omitempty"`
	Url       *string    `json:"url,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error   *string `json:"error,omitempty"`
	Message *string `json:"message,omitempty"`
	Ok      *bool   `json:"ok,omitempty"`
}

// Java defines model for Java.
type Java struct {
	Flags   *JavaFlags   `json:"flags,omitempty"`
	Version *JavaVersion `json:"version,omitempty"`
}

// JavaFlags defines model for JavaFlags.
type JavaFlags struct {
	Recommended *[]string `json:"recommended,omitempty"`
}

// JavaVersion defines model for JavaVersion.
type JavaVersion struct {
	Minimum *int32 `json:"minimum,omitempty"`
}

// Project defines model for Project.
type Project struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// ProjectResponse defines model for ProjectResponse.
type ProjectResponse struct {
	Project  *Project             `json:"project,omitempty"`
	Versions *map[string][]string `json:"versions,omitempty"`
}

// ProjectsResponse defines model for ProjectsResponse.
type ProjectsResponse struct {
	Projects *[]ProjectResponse `json:"projects,omitempty"`
}

// Support defines model for Support.
type Support struct {
	End    *openapi_types.Date `json:"end,omitempty"`
	Status *SupportStatus      `json:"status,omitempty"`
}

// SupportStatus defines model for Support.Status.
type SupportStatus string

// Version defines model for Version.
type Version struct {
	Id      *string  `json:"id,omitempty"`
	Java    *Java    `json:"java,omitempty"`
	Support *Support `json:"support,omitempty"`
}

// VersionResponse defines model for VersionResponse.
type VersionResponse struct {
	Builds  *[]int32 `json:"builds,omitempty"`
	Version *Version `json:"version,omitempty"`
}

// GetBuildsParams defines parameters for GetBuilds.
type GetBuildsParams struct {
	// Channel Filter builds by channel
	Channel *GetBuildsParamsChannel `form:"channel,omitempty" json:"channel,omitempty"`
}

// GetBuildsParamsChannel defines parameters for GetBuilds.
type GetBuildsParamsChannel string
