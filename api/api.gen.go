// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"
)

// Defines values for BuildResponseChannel.
const (
	BuildResponseChannelDefault      BuildResponseChannel = "default"
	BuildResponseChannelExperimental BuildResponseChannel = "experimental"
)

// Defines values for VersionBuildChannel.
const (
	VersionBuildChannelDefault      VersionBuildChannel = "default"
	VersionBuildChannelExperimental VersionBuildChannel = "experimental"
)

// Defines values for VersionFamilyBuildChannel.
const (
	Default      VersionFamilyBuildChannel = "default"
	Experimental VersionFamilyBuildChannel = "experimental"
)

// BuildResponse defines model for BuildResponse.
type BuildResponse struct {
	Build       *int32                `json:"build,omitempty"`
	Changes     *[]Change             `json:"changes,omitempty"`
	Channel     *BuildResponseChannel `json:"channel,omitempty"`
	Downloads   *map[string]Download  `json:"downloads,omitempty"`
	ProjectId   *string               `json:"project_id,omitempty"`
	ProjectName *string               `json:"project_name,omitempty"`
	Promoted    *bool                 `json:"promoted,omitempty"`
	Time        *time.Time            `json:"time,omitempty"`
	Version     *string               `json:"version,omitempty"`
}

// BuildResponseChannel defines model for BuildResponse.Channel.
type BuildResponseChannel string

// BuildsResponse defines model for BuildsResponse.
type BuildsResponse struct {
	Builds      *[]VersionBuild `json:"builds,omitempty"`
	ProjectId   *string         `json:"project_id,omitempty"`
	ProjectName *string         `json:"project_name,omitempty"`
	Version     *string         `json:"version,omitempty"`
}

// Change defines model for Change.
type Change struct {
	Commit  *string `json:"commit,omitempty"`
	Message *string `json:"message,omitempty"`
	Summary *string `json:"summary,omitempty"`
}

// Download defines model for Download.
type Download struct {
	Name   *string `json:"name,omitempty"`
	Sha256 *string `json:"sha256,omitempty"`
}

// ProjectResponse defines model for ProjectResponse.
type ProjectResponse struct {
	ProjectId     *string   `json:"project_id,omitempty"`
	ProjectName   *string   `json:"project_name,omitempty"`
	VersionGroups *[]string `json:"version_groups,omitempty"`
	Versions      *[]string `json:"versions,omitempty"`
}

// ProjectsResponse defines model for ProjectsResponse.
type ProjectsResponse struct {
	Projects *[]string `json:"projects,omitempty"`
}

// VersionBuild defines model for VersionBuild.
type VersionBuild struct {
	Build     *int32               `json:"build,omitempty"`
	Changes   *[]Change            `json:"changes,omitempty"`
	Channel   *VersionBuildChannel `json:"channel,omitempty"`
	Downloads *map[string]Download `json:"downloads,omitempty"`
	Promoted  *bool                `json:"promoted,omitempty"`
	Time      *time.Time           `json:"time,omitempty"`
}

// VersionBuildChannel defines model for VersionBuild.Channel.
type VersionBuildChannel string

// VersionFamilyBuild defines model for VersionFamilyBuild.
type VersionFamilyBuild struct {
	Build     *int32                     `json:"build,omitempty"`
	Changes   *[]Change                  `json:"changes,omitempty"`
	Channel   *VersionFamilyBuildChannel `json:"channel,omitempty"`
	Downloads *map[string]Download       `json:"downloads,omitempty"`
	Promoted  *bool                      `json:"promoted,omitempty"`
	Time      *time.Time                 `json:"time,omitempty"`
	Version   *string                    `json:"version,omitempty"`
}

// VersionFamilyBuildChannel defines model for VersionFamilyBuild.Channel.
type VersionFamilyBuildChannel string

// VersionFamilyBuildsResponse defines model for VersionFamilyBuildsResponse.
type VersionFamilyBuildsResponse struct {
	Builds       *[]VersionFamilyBuild `json:"builds,omitempty"`
	ProjectId    *string               `json:"project_id,omitempty"`
	ProjectName  *string               `json:"project_name,omitempty"`
	VersionGroup *string               `json:"version_group,omitempty"`
	Versions     *[]string             `json:"versions,omitempty"`
}

// VersionFamilyResponse defines model for VersionFamilyResponse.
type VersionFamilyResponse struct {
	ProjectId    *string   `json:"project_id,omitempty"`
	ProjectName  *string   `json:"project_name,omitempty"`
	VersionGroup *string   `json:"version_group,omitempty"`
	Versions     *[]string `json:"versions,omitempty"`
}

// VersionResponse defines model for VersionResponse.
type VersionResponse struct {
	Builds      *[]int32 `json:"builds,omitempty"`
	ProjectId   *string  `json:"project_id,omitempty"`
	ProjectName *string  `json:"project_name,omitempty"`
	Version     *string  `json:"version,omitempty"`
}
